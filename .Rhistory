print(tests)
prob_sum <- 0
population <- 400000
rate <- 4/population
for (num in tests) {
pr <- dbinom(num, population, rate)
prob_sum <- prob_sum + pr
}
print(prob_sum)
dbinom(5, 20, o,3)
dbinom(5, 20, 0.3)
dbinom(17, 30, 0.6)
ks <- 0:3
lambda <- 5.2
probs <- dpois(ks, lambda)
probs
total <- sum(probs)
total
N <- 20
p <- 0.3
ks <- 0:20
probs <- dbinoms(ks, N, p)
N <- 20
p <- 0.3
ks <- 0:20
probs <- dbinom(ks, N, p)
plot(ks, probs)
prob.less.eq.4 <- sum(probs[1:5])
print(prob.less.eq.4)
size = 100
p = 0.20
x = 10
bin1 <- dbinom(x, size, p)
print(bin1)
size = 100
p = 0.20
x = 10
bin1 <- dbinom(x, size, p)
print(bin1)
size = 100
p = 0.20
x = 0:10
bin2 <- dbinom(x, size, p)
print(bin2)
size = 100
p = 0.20
x = 10
bin1 <- dbinom(x, size, p)
print(bin1)
size = 100
p = 0.20
x = 0:10
bin2 <- dbinom(x, size, p)
print(sum(bin2))
size = 100
p = 0.20
x = 10
bin1 <- dbinom(x, size, p)
print(bin1)
size = 100
p = 0.20
x = 0:10
bin2 <- dbinom(x, size, p)
print(bin2)
print(sum(bin2))
size = 100
p = 0.20
x = 10
bin1 <- dbinom(x, size, p)
print(bin1)
size2 = 100
p2 = 0.20
x2 = 0:10
bin2 <- dbinom(x2, size2, p2)
print(bin2)
print(sum(bin2))
size = 100
p = 0.20
x = 10
bin1 <- dbinom(x, size, p)
print(bin1)
size2 = 100
p2 = 0.20
x2 = 0:10
bin2 <- dbinom(x2, size2, p2)
print(bin2)
print(sum(bin2))
size3 = 100
p3 = 0.20
x3 = 2:10
bin3 <- dbinom(x3, size3, p3)
print(bin3)
print(sum(bin3))
xpois = 10
lambda = 4
pois <- dpois(xpois, lambda)
print(pois)
source("~/stats/inclass_1-31.R")
source("~/stats/inclass_1-31.R")
print("Poisson 1: " + pois)
print("Poisson 1:")
source("~/stats/inclass_1-31.R")
source("~/stats/inclass_1-31.R")
source("~/stats/inclass_1-31.R")
source("~/stats/inclass_1-31.R")
source("~/stats/inclass_1-31.R")
source("~/stats/inclass_1-31.R")
source("~/stats/inclass_1-31.R")
source("~/stats/inclass_1-31.R")
source("~/stats/inclass_1-31.R")
source("~/stats/inclass_1-31.R")
source("~/stats/inclass_1-31.R")
source("~/stats/inclass_1-31.R")
---
title: "first_md"
install.packages(c('tinytex','rmarkdown'))
install.packages(c("tinytex", "rmarkdown"))
tinytex::install_tinytex()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
print(sum(v < 20))
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
dexp(2:4, 0.2)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
sample(1:100, 1)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
ned_areas = list()
zed_areas = list()
# zed
for (i in 1:1000) {
uz = sample(1:100, 1)
area = uz*uz
print(area)
append(zed_areas, area)
}
ned_areas = list()
zed_areas = list()
# zed
for (i in 1:1000) {
uz = sample(1:100, 1)
area = uz*uz
print(area)
append(zed_areas, area)
}
print(zed_areas)
ned_areas = list()
zed_areas = list()
# zed
for (i in 1:1000) {
uz = sample(1:100, 1)
area = uz*uz
print(area)
zed_areas = append(zed_areas, area)
}
print(zed_areas)
ned_areas = list()
zed_areas = list()
# zed
for (i in 1:1000) {
uz = sample(1:100, 1)
area = uz*uz
zed_areas = append(zed_areas, area)
}
print(zed_areas)
ned_areas = list()
zed_areas = list()
# zed
for (i in 1:1000) {
uz = sample(1:100, 1)
area = uz*uz
zed_areas = append(zed_areas, area)
}
# ned
for (i in 1:1000) {
un1 = sample(1:100, 1)
un2 = sample(1:100, 1)
area = un1*un2
ned_areas = append(ned_areas, area)
}
print(mean(ned_areas))
print(mean(zed_areas))
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
View(zed_mean)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/stats/inclass_2-12.R")
source("~/stats/inclass_2-12.R")
source("~/stats/inclass_2-12.R")
source("~/stats/inclass_2-12.R")
source("~/stats/inclass_2-12.R")
source("~/stats/inclass_2-12.R")
source("~/stats/inclass_2-12.R")
source("~/stats/inclass_2-12.R")
source("~/stats/inclass_2-12.R")
source("~/stats/inclass_2-12.R")
source("~/stats/inclass_2-12.R")
source("~/stats/inclass_2-12.R")
source("~/stats/inclass_2-12.R")
source("~/stats/inclass_2-12.R")
source("~/stats/inclass_2-12.R")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
N <- N + 500
source("~/.active-rstudio-document")
p <- 0.3
N <- 1000
storage <- rep(0, N)
for (i in 1:N) {
sim <- rbinom(1, i, p)
p_hat <- sim/i
storage[i] = p_hat
}
sigma_N <- sd(storage)
mu <- p
paste("Standard deviation: ", sigma_N)
N <- 1500
p <- 0.3
N <- 1500
storage <- rep(0, N)
for (i in 1:N) {
sim <- rbinom(1, i, p)
p_hat <- sim/i
storage[i] = p_hat
}
sigma_N <- sd(storage)
mu <- p
paste("Standard deviation: ", sigma_N)
p <- 0.3
N <- 2500
storage <- rep(0, N)
for (i in 1:N) {
sim <- rbinom(1, i, p)
p_hat <- sim/i
storage[i] = p_hat
}
sigma_N <- sd(storage)
mu <- p
paste("Standard deviation: ", sigma_N)
p <- 0.3
N <- 5000
storage <- rep(0, N)
for (i in 1:N) {
sim <- rbinom(1, i, p)
p_hat <- sim/i
storage[i] = p_hat
}
sigma_N <- sd(storage)
mu <- p
paste("Standard deviation: ", sigma_N)
p <- 0.3
N <- 6000
storage <- rep(0, N)
for (i in 1:N) {
sim <- rbinom(1, i, p)
p_hat <- sim/i
storage[i] = p_hat
}
sigma_N <- sd(storage)
mu <- p
paste("Standard deviation: ", sigma_N)
p <- 0.3
N <- 10000
storage <- rep(0, N)
for (i in 1:N) {
sim <- rbinom(1, i, p)
p_hat <- sim/i
storage[i] = p_hat
}
sigma_N <- sd(storage)
mu <- p
paste("Standard deviation: ", sigma_N)
p <- 0.3
N <- 15000
storage <- rep(0, N)
for (i in 1:N) {
sim <- rbinom(1, i, p)
p_hat <- sim/i
storage[i] = p_hat
}
sigma_N <- sd(storage)
mu <- p
paste("Standard deviation: ", sigma_N)
p <- 0.3
N <- 16000
storage <- rep(0, N)
for (i in 1:N) {
sim <- rbinom(1, i, p)
p_hat <- sim/i
storage[i] = p_hat
}
sigma_N <- sd(storage)
mu <- p
paste("Standard deviation: ", sigma_N)
p <- 0.3
N <- 17000
storage <- rep(0, N)
for (i in 1:N) {
sim <- rbinom(1, i, p)
p_hat <- sim/i
storage[i] = p_hat
}
sigma_N <- sd(storage)
mu <- p
paste("Standard deviation: ", sigma_N)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
p <- 0.3
N <- 15000
storage <- rep(0, N)
for (i in 1:N) {
sim <- rbinom(1, i, p)
p_hat <- sim/i
storage[i] = p_hat
}
sigma_N <- sd(storage)
mu <- p
paste("Standard deviation: ", sigma_N)
p <- 0.3
N <- 20000
storage <- rep(0, N)
for (i in 1:N) {
sim <- rbinom(1, i, p)
p_hat <- sim/i
storage[i] = p_hat
}
sigma_N <- sd(storage)
mu <- p
paste("Standard deviation: ", sigma_N)
p <- 0.3
N <- 25000
storage <- rep(0, N)
for (i in 1:N) {
sim <- rbinom(1, i, p)
p_hat <- sim/i
storage[i] = p_hat
}
sigma_N <- sd(storage)
mu <- p
paste("Standard deviation: ", sigma_N)
current_best_sd = sigma_N
p <- 0.3
N <- 500
while (current_best_sd > 0.01) {
N <- N + 500
storage <- rep(0, N)
for (i in 1:N) {
sim <- rbinom(1, i, p)
p_hat <- sim/i
storage[i] = p_hat
}
new_sigma_N <- sd(storage)
if (new_sigma_N < current_best_sd) {
current_best_sd < new_sigma_N
}
}
print(current_best_sd)
print(N)
source("~/.active-rstudio-document")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
quadratic
quadratic
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
plot(storage)
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
srv <- function(M, N, lambda) {
storage <- rep(0, M)
for (i in 1:M) {
sims <- rexp(N, lambda)
x.bar <- mean(sims)
std.err <- (1/lambda)*(1/sqrt(N)) # sigma / sqrt(N)
pop.mean <- 1/lambda
std.mean <- (x.bar - pop.mean)/(std.err)
storage[i] = std.mean
}
hist(storage, 200, col='blue', freq=FALSE)
x <- seq(-5,5,by=0.01)
points(x, dnorm(x), col='red')
}
srv(5000, 100, 0,1)
srv <- function(M, N, lambda) {
storage <- rep(0, M)
for (i in 1:M) {
sims <- rexp(N, lambda)
x.bar <- mean(sims)
std.err <- (1/lambda)*(1/sqrt(N)) # sigma / sqrt(N)
pop.mean <- 1/lambda
std.mean <- (x.bar - pop.mean)/(std.err)
storage[i] = std.mean
}
hist(storage, 200, col='blue', freq=FALSE)
x <- seq(-5,5,by=0.01)
points(x, dnorm(x), col='red')
}
srv(5000, 100, 0.1)
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
source("~/stats/inclass_2-14.R")
setwd("/home/amcpoyle192/stats/final_project")
